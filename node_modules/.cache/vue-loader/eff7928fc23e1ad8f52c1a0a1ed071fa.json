{"remainingRequest":"/Users/Neil/Documents/phase-2/Todo-Fancy/Todo-pt2-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Neil/Documents/phase-2/Todo-Fancy/Todo-pt2-client/src/components/TodoText.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Neil/Documents/phase-2/Todo-Fancy/Todo-pt2-client/src/components/TodoText.vue","mtime":1530687150532},{"path":"/Users/Neil/Documents/phase-2/Todo-Fancy/Todo-pt2-client/node_modules/cache-loader/dist/cjs.js","mtime":1530015341043},{"path":"/Users/Neil/Documents/phase-2/Todo-Fancy/Todo-pt2-client/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport swal from 'sweetalert2'\n\nexport default {\n  data(){\n    return{\n      date: null,\n      dialog4: false,\n      first:'',\n      date:'',\n      listTodo: [],\n      dataWeather : {},\n    }\n  },\n  methods:{\n    editTodo(id){\n      let statusTodo = {status : true}\n      let tokenUser = localStorage.getItem('token')\n      let self = this\n      axios.put('https://todoserver.neil.guru/todos/update/'+id,statusTodo,{\n        headers:{\n          tokenUser\n        },\n      })\n      .then((value) => {\n        self.getData()\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    editedTodo(id){\n      let statusTodo = {status : false}\n      let tokenUser = localStorage.getItem('token')\n      let self = this\n      axios.put('https://todoserver.neil.guru/todos/update/'+id,statusTodo,{\n        headers:{\n          tokenUser\n        },\n      })\n      .then((value) => {\n        self.getData()\n        })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    addTodo(){\n      if(localStorage.getItem('token')){\n        if(this.date === '' && this.first === ''){\n          swal({\n            type: 'error',\n            title: 'Please Insert',\n            text: 'Todo and Date',\n          })\n        }else{\n          let sentTodo = {\n            description : this.first,\n            date: this.date\n          }\n          let tokenuser = localStorage.getItem('token')\n          let self = this\n          axios.post('https://todoserver.neil.guru/todos/create',sentTodo,{\n            headers:{\n              tokenuser\n            }\n          })\n          .then((value) => {\n            self.first = ''\n            self.date = ''\n            swal(\n              'Good job!',\n              'You clicked the button!',\n              'success'\n            )\n            self.getData()\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n        }\n      }else{\n        swal({\n          type: 'error',\n          title: 'Please Login First',\n        })\n      }\n    },\n    getData(){\n      let token = localStorage.getItem('token')\n      let self = this\n      axios.get('https://todoserver.neil.guru/todos/datatodo',{\n        headers:{\n          token\n        }\n      })\n      .then((value) => {\n        self.listTodo = value.data.data.todo\n        console.log(value.data.data.todo);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    deleteTodo (id) {\n      let token = localStorage.getItem('token')\n        axios.delete('https://todoserver.neil.guru/todos/deletetodo/'+id,{\n          headers:{\n            token\n          }\n        })\n        .then((value) => {\n          swal(\"Oooops\", \"You deleted a Todo!\", \"error\");\n          this.getData()\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n      },\n    getWeather(){\n      let self = this\n      axios.get('https://todoserver.neil.guru/todos/getweather')\n      .then((value) => {\n        let data = value.data.result[0]\n        self.dataWeather = {temperature: data.current.temperature, image : data.current.imageUrl, location : data.location.name}\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    getScored(){\n      let self = this\n        axios.get('https://raw.githubusercontent.com/openfootball/world-cup.json/master/2018/worldcup.json')\n        .then((value) => {\n          console.log(value);\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n      }\n  },\n  created(){\n    this.getData()\n    this.getWeather()\n  }\n}\n",{"version":3,"sources":["TodoText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"TodoText.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-container grid-list-md mt-4>\n      <h3>{{dataWeather.temperature}}&#x2103;</h3>\n      <img :src=\"dataWeather.image\">\n      <h3>{{dataWeather.location}}</h3>\n      <v-layout row wrap>\n        <v-text-field v-model=\"first\" label=\"What You Want To Do?\"></v-text-field>\n        <v-menu\n          ref=\"menu2\"\n          :close-on-content-click=\"false\"\n          v-model=\"menu2\"\n          :nudge-right=\"10\"\n          :return-value.sync=\"date\"\n          transition=\"scale-transition\"\n          offset-y\n          min-width=\"100px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"date\"\n            icon=\"event\"\n            label=\"Date\"\n            readonly\n          ></v-text-field>\n          <v-date-picker v-model=\"date\" @input=\"$refs.menu2.save(date)\"></v-date-picker>\n        </v-menu>\n        <v-btn round color=\"primary\" dark @click=\"addTodo()\"><b>ADD TODO</b></v-btn>\n      </v-flex>\n      </v-layout>\n    </v-container>\n    <v-container>\n    <v-layout row wrap>\n      <v-flex xs3 class=\"my-2 mr-5 ml-5\" v-for=\"todo in listTodo\">\n        <v-card height=\"100%\">\n        <v-card-text>\n          <h2 class=\"text-md-center\" v-if=\"!todo.status\">{{todo.description}}</h2>\n          <h2 class=\"text-md-center\" v-else><strike>{{todo.description}}</strike></h2>\n          {{todo.date}}</v-card-text>\n          <div v-if=\"!todo.status\">\n            <v-btn flat color=\"green\" @click=\"editTodo(todo._id)\">Done</v-btn>\n            <v-btn flat color=\"orange\" @click=\"deleteTodo(todo._id)\">Delete</v-btn>\n          </div>\n          <div v-else>\n            <v-btn flat color=\"red\" @click=\"editedTodo(todo._id)\">Undone</v-btn>\n            <v-btn flat color=\"orange\" @click=\"deleteTodo(todo._id)\">Delete</v-btn>\n          </div>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport swal from 'sweetalert2'\n\nexport default {\n  data(){\n    return{\n      date: null,\n      dialog4: false,\n      first:'',\n      date:'',\n      listTodo: [],\n      dataWeather : {},\n    }\n  },\n  methods:{\n    editTodo(id){\n      let statusTodo = {status : true}\n      let tokenUser = localStorage.getItem('token')\n      let self = this\n      axios.put('https://todoserver.neil.guru/todos/update/'+id,statusTodo,{\n        headers:{\n          tokenUser\n        },\n      })\n      .then((value) => {\n        self.getData()\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    editedTodo(id){\n      let statusTodo = {status : false}\n      let tokenUser = localStorage.getItem('token')\n      let self = this\n      axios.put('https://todoserver.neil.guru/todos/update/'+id,statusTodo,{\n        headers:{\n          tokenUser\n        },\n      })\n      .then((value) => {\n        self.getData()\n        })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    addTodo(){\n      if(localStorage.getItem('token')){\n        if(this.date === '' && this.first === ''){\n          swal({\n            type: 'error',\n            title: 'Please Insert',\n            text: 'Todo and Date',\n          })\n        }else{\n          let sentTodo = {\n            description : this.first,\n            date: this.date\n          }\n          let tokenuser = localStorage.getItem('token')\n          let self = this\n          axios.post('https://todoserver.neil.guru/todos/create',sentTodo,{\n            headers:{\n              tokenuser\n            }\n          })\n          .then((value) => {\n            self.first = ''\n            self.date = ''\n            swal(\n              'Good job!',\n              'You clicked the button!',\n              'success'\n            )\n            self.getData()\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n        }\n      }else{\n        swal({\n          type: 'error',\n          title: 'Please Login First',\n        })\n      }\n    },\n    getData(){\n      let token = localStorage.getItem('token')\n      let self = this\n      axios.get('https://todoserver.neil.guru/todos/datatodo',{\n        headers:{\n          token\n        }\n      })\n      .then((value) => {\n        self.listTodo = value.data.data.todo\n        console.log(value.data.data.todo);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    deleteTodo (id) {\n      let token = localStorage.getItem('token')\n        axios.delete('https://todoserver.neil.guru/todos/deletetodo/'+id,{\n          headers:{\n            token\n          }\n        })\n        .then((value) => {\n          swal(\"Oooops\", \"You deleted a Todo!\", \"error\");\n          this.getData()\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n      },\n    getWeather(){\n      let self = this\n      axios.get('https://todoserver.neil.guru/todos/getweather')\n      .then((value) => {\n        let data = value.data.result[0]\n        self.dataWeather = {temperature: data.current.temperature, image : data.current.imageUrl, location : data.location.name}\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    },\n    getScored(){\n      let self = this\n        axios.get('https://raw.githubusercontent.com/openfootball/world-cup.json/master/2018/worldcup.json')\n        .then((value) => {\n          console.log(value);\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n      }\n  },\n  created(){\n    this.getData()\n    this.getWeather()\n  }\n}\n</script>\n\n<style lang=\"css\">\n</style>\n"]}]}